library(lattice)
library(datasets)
names(airquality)
xyplot(Ozone ~ Wind, data = airquality)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
p <- xyplot(Ozone ~ Wind, data = airquality)
p
print(p)
xyplot(Ozone ~ Wind, data = airquality)
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2, 1))
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...) ## First call the default panel function for 'xyplot'
panel.abline(h = median(y), lty = 2) ## Add a horizontal line at the median
})
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...) ## First call default panel function
panel.lmline(x, y, col = 2) ## Overlay a simple linear regression line
})
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
splom()
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
movies<-data.frame(votes=c(1,5,3,1,2,4,2,5,1,3,2,5,4,1,3,2))
dim(movies)
movies<-data.frame(rating=c(1,5,3,1,2,4,2,5,1,3,2,5,4,1,3,2),votes=c(102,247,234,12,34,94,10,37,59,70,150,111,89,123,48,134))
dim(movies)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
x<-rnorm(1000)
hist(x)
qplot(x)
qplot(x,binwidth=x)
qplot(x,binwidth=2)
qplot(x,binwidth=10)
qplot(x,binwidth=100)
qplot(x,binwidth=1000)
qplot(x,binwidth=1)
qplot(x,binwidth=0.1)
qplot(x,binwidth=0.01)
y<-rnorm(10000,mean=0,sd=100)
x<-1:10000
df<-data.frame(index=x,value=y)
qplot(index,value,df)
names(df)
qplot(index,value,data=df)
qplot(value,data=df)
qplot(value,data=df) + geom_smooth()
qplot(value,data=df,geom="density")
df<-data.frame(index=x,value1=y,value2=rnorm(10000,mean=30,sd=150))
df<-data.frame(index=1:20000,values=c(y,rnorm(10000,mean=30,sd=150)),f=rep(1:2,each=10000))
dim(df)
names(df)
qplot(values,data=df,geom=density,color=f)
df<-transform(df,f=factor(f))
qplot(values,data=df,geom=density,color=f)
qplot(values,data=df,geom="density",color=f)
qplot(values,data=df,geom="density",color=f,size=5)
qplot(values,data=df,geom="density",color=f,size=5,alpha=0.5)
qplot(values,data=df,geom="density",color=f,size=5,alpha=1/2)
qplot(values,data=df,geom="density",color=f,size=5,alpha=1/2,fill=TRUE)
qplot(values,data=df,geom="density",color=f,size=5,alpha=1/2,fill=f)
qplot(values,data=df,geom="density",color=f,size=1,alpha=1/2,fill=f)
qplot(values,data=df,geom="density",color=f,size=1,alpha=1/2,fill=f)
qplot(values,data=df,geom="density",color=f,size=0.1,alpha=1/2,fill=f)
qplot(values,data=df,geom="density",color=f,size=0.1,alpha=1/2,fill=f)
df<-data.frame(index=1:20000,values=c(rnorm(10000,mean=100,sd=100),rnorm(10000,mean=30,sd=150)),f=rep(1:2,each=10000))
qplot(values,data=df,geom="density",color=f,size=0.1,alpha=1/2,fill=f)
dim(df)
qplot(values,data=df,geom="density",color=f,size=1,alpha=1/2,fill=f)
names(df)
df<-transform(df,f=factor(f))
qplot(values,data=df,geom="density",color=f,size=1,alpha=1/2,fill=f)
qplot(values,data=df,geom="density",color=f,alpha=1/2,fill=f)
install.packages(knitr)
install.packages("knitr")
data<-read.csv("./activity/activity.csv")
setwd("C:/Users/surjya/Desktop/Data-Science/Reproducible research/Assignment-1/RepData_PeerAssessment1")
data<-read.csv("./activity/activity.csv")
dim(data)
names(data)
str(data)
data<-data[complete.cases(data),]
dim(data)
hist(data$steps)
x<-ddply(data,"date",function(y) sum(y$date))
library(plyr)
x<-ddply(data,"date",function(y) sum(y$date))
x<-ddply(data,"date",function(y) sum(date))
x<-ddply(data,"date",sum(date))
ddply(df, "date", numcolwise(sum))
ddply(data, "date", numcolwise(sum))
x<-ddply(data, "date", numcolwise(sum))
hist(x)
hist(x$steps)
dsummarize<-ddply(data,~date,summarise,mean=mean(steps),sd=sd(steps))
name(dsummarize)
names(dsummarize)
hist(dsummarize$mean)
hist(dsummarize$sd)
